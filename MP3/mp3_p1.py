# -*- coding: utf-8 -*-
"""MP3-P1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eInUpYvkdE0h1I8trUdFVaJVwc6nBSr9
"""

import numpy as np
import cv2
import math
import matplotlib.pyplot as plt

common_size = (100, 100)

def calculate_hs_histogram(img, bin_size):
    img_resized = cv2.resize(img, common_size)
    img_hsv = cv2.cvtColor(img_resized, cv2.COLOR_BGR2HSV)
    max_h = 179
    max_s = 255
    hs_hist = np.zeros((math.ceil(max_h/bin_size), math.ceil(max_s/bin_size)))
    height, width, _ = img_hsv.shape
    for i in range(height):
        for j in range(width):
            h = img_hsv[i, j, 0]
            s = img_hsv[i, j, 1]
            hs_hist[math.floor(h/bin_size), math.floor(s/bin_size)] += 1
    hs_hist /= hs_hist.sum()
    return hs_hist

def aggregate_hs_histograms(image_paths, bin_size):
    combined_hist = None
    for path in image_paths:
        img = cv2.imread(path)
        if img is None:
            print(f"Could not load image: {path}")
            continue
        hs_hist = calculate_hs_histogram(img, bin_size)
        if combined_hist is None:
            combined_hist = hs_hist
        else:
            combined_hist += hs_hist
    if combined_hist is not None:
        combined_hist /= len(image_paths)
    return combined_hist

def color_segmentation(img, hs_hist, bin_size, threshold):
    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
    height, width, _ = hsv.shape
    mask = np.zeros((height, width, 1), dtype=np.uint8)
    for i in range(height):
        for j in range(width):
            h = hsv[i, j, 0]
            s = hsv[i, j, 1]
            if hs_hist[math.floor(h/bin_size), math.floor(s/bin_size)] > threshold:
                mask[i, j, 0] = 1
    return mask

skin_patch_paths = [
    "train/s13.jpg", "train/s12.jpg", "train/s11.jpg", "train/s10.jpg",
    "train/s9.webp", "train/s8.webp", "train/s7.webp", "train/s6.webp",
    "train/s5.jpeg", "train/s4.webp", "train/s3.jpg", "train/s2.webp",
    "train/s1.webp", "train/s14.jpg"
]

bin_size = 20
threshold = 0.03

hs_hist = aggregate_hs_histograms(skin_patch_paths, bin_size)

img_test = cv2.imread("testing_image.bmp")
mask = color_segmentation(img_test, hs_hist, bin_size, threshold)
img_seg = img_test * mask

plt.figure(figsize=(10,10))
plt.subplot(1, 3, 1)
plt.title("Input")
plt.imshow(cv2.cvtColor(img_test, cv2.COLOR_BGR2RGB))
plt.axis('off')

plt.subplot(1, 3, 2)
plt.title("Mask")
plt.imshow((mask * 255).astype(np.uint8), cmap='gray')
plt.axis('off')

plt.subplot(1, 3, 3)
plt.title("Segmentation")
plt.imshow(cv2.cvtColor(img_seg.astype(np.uint8), cv2.COLOR_BGR2RGB))
plt.axis('off')

plt.show()